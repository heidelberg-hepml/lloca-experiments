name: Amplitudes trial experiments

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: MLP + IdentityLFrames
      run: |
        python run.py -cn amplitudes model=amp_mlp save=false evaluate=false training.iterations=3

    - name: TFTransformer + IdentityLFrames
      run: |
        python run.py -cn amplitudes model=amp_transformer save=false evaluate=false training.iterations=3

    - name: TFTransformer + OrthogonalLearnedLFrames
      run: |
        python run.py -cn amplitudes model=amp_transformer model/lframesnet=orthogonal save=false evaluate=false training.iterations=3

    - name: TFTransformer + RandomLFrames
      run: |
        python run.py -cn amplitudes model=amp_transformer model/lframesnet=random save=false evaluate=false training.iterations=3

    - name: TFGraphNet (nodes+edges) + IdentityLFrames
      run: |
        python run.py -cn amplitudes model=amp_graphnet save=false evaluate=false training.iterations=3

    - name: TFGraphNet (nodes only) + IdentityLFrames
      run: |
        python run.py -cn amplitudes model=amp_graphnet save=false evaluate=false training.iterations=3 model.include_edges=false

    - name: TFGraphNet (edges only) + IdentityLFrames
      run: |
        python run.py -cn amplitudes model=amp_graphnet save=false evaluate=false training.iterations=3 model.include_nodes=false
